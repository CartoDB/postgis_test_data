#!/bin/sh

test -n "$2" || {
  echo "Usage: $0 <table> <z1> [<z2> ...]" 2>&1
  exit 1
}

dir=`dirname $0`

table="$1"; shift
tname=`echo ${table} | sed 's/^case_//'`
iterations=5

PGHOST=`grep host $dir/template.xml | sed -e 's/.*CDATA\[//' -e 's/]].*//'`
PGPORT=`grep port $dir/template.xml | sed -e 's/.*CDATA\[//' -e 's/]].*//'`
PGDATABASE=`grep dbname $dir/template.xml | sed -e 's/.*CDATA\[//' -e 's/]].*//'`
#echo "HOST: $PGHOST PORT: $PGPORT DBNAME: $PGDATABASE"  && exit 1
##PGUSER=`grep user $dir/template.xml | sed -e 's/.*CDATA\[//' -e 's/]].*//'`
export PGHOST PGPORT PGDATABASE
#geom=`grep geometry_field $dir/template.xml | sed -e 's/">//' -e 's/<.*//'`

pglog=/tmp/pg93.log

#for z in `seq 0 2 10`; do
for z in $@; do
  base=0
  #echo -n "T ${tname} Z${z} "
  ext=`$dir/tile ${z}`
  for simp in "" "simp"; do
    for clip in "" "clip"; do
      for grid in "" "grid"; do
        style_fname="/tmp/${table}_z${z}_${clip}_${grid}_${simp}.xml"
        echo "STYLE: ${style_fname}" >&2
        $dir/style "$table" ${z} ${simp} ${clip} ${grid} > "${style_fname}"
        if test $? != 0; then
          exit 1
        fi
        timing=`mapnik-speed-check "${style_fname}" ${iterations}`
        lastlog=`tail $pglog | grep execute | tail -1`
        qtime=`echo "$lastlog" | sed -e 's/.*duration: //;s/ ms.*//'`
        sql=`echo "$lastlog" | sed 's/.*>: //' | sed 's/ST_AsBinary/postgis_noop/'`
        echo "SQL: $sql" >&2
#sum(octet_length(st_astwkb(geom,0))) \
        res=`echo "SET STATEMENT_TIMEOUT TO 0; SELECT sum(st_npoints(geom)), sum(octet_length(st_asbinary(geom))), \
0 \
from ( $sql ) as foo" | psql -XtA | grep -v SET`
        # res would look like "1|21"
        npts=`echo $res | cut -d'|' -f1`
        test -z "$npts" && npts=0
        nbytes=`echo $res | cut -d'|' -f2`
        test -z "$nbytes" && nbytes=0
        nbytestwkb=`echo $res | cut -d'|' -f3`
        test -z "$nbytestwkb" && nbytestwkb=0
    #sql="SELECT sum(st_npoints($geom)) as orig, sum(st_npoints(st_simplify(
        # min: 11.686ms | avg: 12.100ms | total: 0.0483s
        avg=`echo "${timing}" | sed 's/.* avg: \([^ ]*\)ms.*/\\1/'`
        if expr "${base}" = 0 > /dev/null; then
          base=$avg
          basep=$npts
          baseb=$nbytes
          basebtwkb=$nbytestwkb
          baseqt=$qtime
          relt=1; relp=1; relb=1; relqt=1
          #rels="* 1"
        else
          relt=`echo "scale=3; ${avg}/${base}" | bc`
          test -z "$relt" && relt=0
          relp=`echo "scale=3; ${npts}/${basep}" | bc`
          test -z "$relp" && relp=0
          relb=`echo "scale=3; ${nbytes}/${baseb}" | bc`
          test -z "$relb" && relb=0
          relbtwkb=`echo "scale=3; ${nbytestwkb}/${basebtwkb}" | bc`
          test -z "$relbtwkb" && relbtwkb=0
          relqt=`echo "scale=3; ${qtime}/${baseqt}" | bc`
          test -z "$relqt" && relqt=0
          #rels="* ${relt}ms / * ${relp}pts)"
        fi
        #echo -n "${simp}${clip}:${avg} "
#T lines_world_1kf_5kv Z0 331.64ms * .242 583021pts * .109 9337930b $ .109  grid
        echo "T ${tname} Z${z} ${avg}ms * ${relt} | ${qtime}qms * ${relqt} | ${npts}pts * ${relp} | ${nbytes}b * ${relb} | ${nbytestwkb}t * ${relbtwkb} | ${clip} ${grid} ${simp}"
      done
    done
  done
  #echo 
done

